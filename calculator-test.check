/* 
Roman calculator: performs addition and subtraction of roman values
Author: Vinay vittal Karagod
File dependents: main.c, calculator.h, calculator.c,calculator-test.check
Date: 09/06/2016
calculator-test.check: Test file used to pass the input values to calculate roman numbers.
*/

# include "calculator.h"
char buffer[50];

#test calc

/* checking the conditions for the single roman value*/
ck_assert_msg(romanValue('I') == 1,"operation failed for I");
ck_assert_msg(romanValue('V') == 5,"operation failed for V");
ck_assert_msg(romanValue('X') == 10,"operation failed for X");
ck_assert_msg(romanValue('L') == 50,"operation failed for L");
ck_assert_msg(romanValue('C') == 100,"operation failed for C");
ck_assert_msg(romanValue('D') == 500,"operation failed for D");
ck_assert_msg(romanValue('M') == 1000,"operation failed for M");
ck_assert_msg(romanValue('\0') == 0,"operation failed for end of line");
ck_assert_msg(romanValue('K') == -1,"operation failed for passing empty file");


/*condition to check the string of roman numbers*/
ck_assert_msg(roman_decimal("MD") == 1500,"operation failed to convert roman to decimal");
ck_assert_msg(roman_decimal("MM") == 2000,"operation failed to convert roman to decimal");
ck_assert_msg(roman_decimal("DM") == 1500,"wrong format to pass the roman value");


/*condition to convert back from decimal to roman number*/
ck_assert_msg(strcmp(decimal_roman(1000,buffer),"M") == 0,"Operation failed to convert decimal to roman");
ck_assert_msg(strcmp(decimal_roman(1500,buffer),"MD") == 0,"Operation failed to convert decimal to roman");
ck_assert_msg(strcmp(decimal_roman(1900,buffer),"MCM") == 0,"Operation failed to convert decimal to roman");
ck_assert_msg(strcmp(decimal_roman(150,buffer),"CL") == 0,"Operation failed to convert decimal to roman");
ck_assert_msg(strcmp(decimal_roman(15,buffer),"XV") == 0,"Operation failed to convert decimal to roman");
ck_assert_msg(strcmp(decimal_roman(4,buffer),"IV") == 0,"Operation failed to convert decimal to roman");




